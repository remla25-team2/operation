- hosts: all
  become: yes
  tasks:
    - name: Add SSH public key to authorized_keys
      ansible.posix.authorized_key:
        user: vagrant
        state: present
        key: "{{ lookup('file', item) }}"
      loop: "{{ lookup('fileglob', 'public_keys/*.pub', wantlist=True) }}"

    - name: Disable swap
      ansible.builtin.shell: swapoff -a

    - name: Remove swap entry from /etc/fstab
      ansible.builtin.lineinfile:
        path: /etc/fstab
        regexp: '^\s*[^#]+\s+swap\s+'
        state: absent

    - name: Ensure overlay and br_netfilter are loaded at boot
      ansible.builtin.copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          overlay
          br_netfilter
        owner: root
        group: root
        mode: "0644"

    - name: Load br_netfilter module now
      ansible.builtin.modprobe:
        name: br_netfilter
        state: present

    - name: Load overlay module now
      ansible.builtin.modprobe:
        name: overlay
        state: present

    - name: Enable net.ipv4.ip_forward
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: "1"
        state: present
        reload: yes

    - name: Enable net.bridge.bridge-nf-call-iptables
      ansible.builtin.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: "1"
        state: present
        reload: yes

    - name: Enable net.bridge.bridge-nf-call-ip6tables
      ansible.builtin.sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: "1"
        state: present
        reload: yes

    - name: Manage /etc/hosts file
      ansible.builtin.template:
        src: templates/hosts.j2
        dest: /etc/hosts
        owner: root
        group: root
        mode: "0644"
        backup: yes

    - name: Install prerequisites for Kubernetes apt repository
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: yes

    - name: Ensure /etc/apt/keyrings directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Download and dearmor Kubernetes GPG key (v1.32)
      ansible.builtin.shell:
        cmd: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.32/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      become: yes

    - name: Add Kubernetes apt repository (v1.32)
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.32/deb/ /"
        state: present
        filename: kubernetes
        update_cache: no

    - name: Update apt cache after adding Kubernetes repository
      ansible.builtin.apt:
        update_cache: yes

    - name: Install containerd, runc, kubelet, kubeadm, kubectl with specific versions
      ansible.builtin.apt:
        name:
          - "{{ containerd_pkg_name }}={{ containerd_version }}"
          - "{{ runc_pkg_name }}={{ runc_version }}"
          - "kubelet={{ k8s_version_suffix }}"
          - "kubeadm={{ k8s_version_suffix }}"
          - "kubectl={{ k8s_version_suffix }}"
        state: present
        update_cache: yes
      vars:
        containerd_pkg_name: containerd
        containerd_version: "1.7.24-0ubuntu1~24.04.2"
        runc_pkg_name: runc
        runc_version: "1.1.12-0ubuntu3.1"
        k8s_version_suffix: "1.32.4-1.1"
      notify: Restart containerd

    - name: Mark Kubernetes packages on hold
      ansible.builtin.command:
        cmd: apt-mark hold kubelet kubeadm kubectl
      changed_when: false

    - name: Ensure /etc/containerd directory exists
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Dump default containerd configuration
      ansible.builtin.shell:
        cmd: containerd config default > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml
      changed_when: true
      become: true
      notify: Restart containerd

    - name: Configure sandbox_image in containerd config
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^(\s*#?\s*sandbox_image\s*=\s*).*$'
        line: '\1"registry.k8s.io/pause:3.10"'
        backrefs: yes
      notify: Restart containerd

    - name: Configure disable_apparmor in containerd config
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^(\s*#?\s*disable_apparmor\s*=\s*).*$'
        line: '\1true'
        backrefs: yes
      notify: Restart containerd

    - name: Configure SystemdCgroup for runc in containerd config
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^(\s*#?\s*SystemdCgroup\s*=\s*).*$'
        line: '\1true'
        backrefs: yes
      notify: Restart containerd

    - name: Enable and start kubelet service
      ansible.builtin.service:
        name: kubelet
        enabled: yes
        state: started

  # Handlers are defined at the play level
  handlers:
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
