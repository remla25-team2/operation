apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name:
    {{ include "my-app.fullname" . }}-gateway
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
spec:
  selector: { istio: ingressgateway }
  servers:
  - port: { number: 80, name: http, protocol: HTTP }
    hosts: [ "*" ]
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{ include "my-app.fullname" . }}-virtualservice
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
spec:
  gateways: [ {{ include "my-app.fullname" . }}-gateway ]
  hosts: [ "*" ]
  http:
  # Route users with v1 cookie to v1
  - match:
    - uri: { prefix: / }
      headers:
        cookie:
          regex: ".*version=v1.*"
    route:
    - destination:
        host: {{ include "my-app.fullname" . }}-app
        subset: v1
      weight: 100
  {{- if .Values.experiment.enabled }}
  # Route users with v2 cookie to v2
  - match:
    - uri: { prefix: / }
      headers:
        cookie:
          regex: ".*version=v2.*"
    route:
    - destination:
        host: {{ include "my-app.fullname" . }}-app
        subset: v2
      weight: 100
  {{- end }}
  # Default route for new users (without version cookie)
  - match:
    - uri: { prefix: / }
    route:
    - destination:
        host: {{ include "my-app.fullname" . }}-app
        subset: v1
      weight: {{ .Values.experiment.versions.v1.weight | default 100 }}
      headers:
        response:
          set:
            Set-Cookie: "version=v1; Path=/; Max-Age=3600"
    {{- if .Values.experiment.enabled }}
    - destination:
        host: {{ include "my-app.fullname" . }}-app
        subset: v2
      weight: {{ .Values.experiment.versions.v2.weight | default 0 }}
      headers:
        response:
          set:
            Set-Cookie: "version=v2; Path=/; Max-Age=3600"
    {{- end }}

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata: 
  name: {{ include "my-app.fullname" . }}-app-dr
spec:
  host: {{ include "my-app.fullname" . }}-app
  subsets:
  - name: v1
    labels: { version: v1 }
  - name: v2
    labels: { version: v2 }

---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata: { name: model-service-dr }
spec:
  host: {{ include "my-app.fullname" . }}-model-service
  subsets:
  - name: v1
    labels: { version: v1 }
  - name: v2
    labels: { version: v2 }

---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata: { name: model-vs }
spec:
  hosts: [ {{ include "my-app.fullname" . }}-model-service ]
  http:
  - match:
    - sourceLabels: { version: v2 }
    route:
    - destination: { host: {{ include "my-app.fullname" . }}-model-service, subset: v2 }
  - route: # default route
    - destination: { host: {{ include "my-app.fullname" . }}-model-service, subset: v1 }