apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-app.fullname" . }}-app-v2
  labels:
    {{- include "my-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: app
    version: v2
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: {{ .Release.Name }}
      version: v2
  template:
    metadata:
      labels:
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: {{ .Release.Name }}
        version: v2
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "{{ .Values.app.service.port }}"
    spec:
      containers:
        - name: app
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ .Values.app.service.port }}
              protocol: TCP
          env:
            - name: MODEL_SERVICE_URL
              value: {{ .Values.app.modelServiceUrl | quote }}
            - name: MESSAGE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "my-app.fullname" . }}-config
                  key: MESSAGE
            - name: SECRET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "my-app.fullname" . }}-secret
                  key: password
          volumeMounts:
            - name: app-data
              mountPath: /mnt/shared/app-data
      volumes:
        - name: app-data
          hostPath:
            path: {{ .Values.app.hostPathVolume.path }}
            type: DirectoryOrCreate